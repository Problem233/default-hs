module ProjectEuler where

import Control.Monad (forM) -- Used by answer79_1
import Data.Char (digitToInt) -- Used by answer8_1, answer56_1
import Data.List (
  tails, -- Used by answer8_1, answer11_1
  transpose, -- Used by answer11_1
  maximumBy, -- Used by answer14_1
  sort, -- Used by answer62_1
  permutations, -- Used by answer68_1
  nub, -- Used by answer79_1
  sortBy) -- Used by answer79_1, answer56_1
import Data.Ord (comparing) -- Used by answer14_1
import Data.Array (
  listArray, (!), -- Used by answer14_1, answer76_1
  assocs) -- Used by answer14_1
import Lib (
  rotate, -- Used by answer11_1
  count) -- Used by answer55_1
import Math (
  primes, -- Used by answer5_1, answer7_1
  primesBounded, -- Used by answer10_1
  numOfFactors, -- Used by answer12_1
  fact, -- Used by answer15_1
  pascalsTriangle) -- Used by answer15_3

-- Problem 1: Mutiple of 3 and 5
-- --
-- If we list all the natural numbers below 10 that are multiples of 3 or 5, we
-- get 3, 5, 6 and 9. The sum of these multiples is 23.
-- Find the sum of all the multiples of 3 or 5 below 1000.
-- --
-- Answer: 233168

-- answer1_1: O(1)
answer1_1 :: Integer
answer1_1 = sum' 3 + sum' 5 - sum' 15
  where numberOfItem limit x = limit `quot` x
        sum limit x = (x + noi * x) * noi `quot` 2
          where noi = numberOfItem limit x
        sum' = sum (1000 - 1)

-- answer1_2: O(n)
answer1_2 :: Integer
answer1_2 =
  sum [3, 6..999] + sum [5, 10..999] - sum [15, 30..999]

-- answer1_3: O(n)
answer1_3 :: Integer
answer1_3 = sum $
  filter (\x -> x `rem` 3 == 0 || x `rem` 5 == 0) [1..999]

-- Problem 2: Even Fibonacci numbers
-- --
-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be:
--   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do not
-- exceed four million, find the sum of the even- valued terms.
-- --
-- Answer: 4613732

-- answer2_1: O(n)
answer2_1 :: Integer
answer2_1 = loop 0 1 2
  where loop sum a b
          | a <= 4000000 = loop (sum + if even a then a else 0) b (a + b)
          | otherwise = sum

-- answer2_2: O(n)
answer2_2 :: Integer
answer2_2 = sum $ filter even $ takeWhile (<= 4000000) $ fib 1 2
  where fib a b = a : fib b (a + b)

-- Problem 3: Largest prime factor
-- --
-- The prime factors of 13195 are 5, 7, 13 and 29.
-- What is the largest prime factor of the number 600851475143 ?
-- --
-- Answer: 6857

-- answer3_1: O(n)
-- BUG 答案正确，所以懒得改了
answer3_1 :: Integer
answer3_1 = find num 2 2
  where num = 600851475143
        index = floor $ sqrt $ fromInteger num
        find x f r
          | f > index = r
          | x `rem` f == 0 = find (x `quot` f) (f + 1) f
          | otherwise = find x (f + 1) r

-- Problem 4: Largest palindrome product
-- --
-- A palindromic number reads the same both ways. The largest palindrome made
-- from the product of two 2-digit numbers is 9009 = 91 × 99.
-- Find the largest palindrome made from the product of two 3-digit numbers.
-- --
-- Answer: 906609

-- answer4_1: O(10^n)
answer4_1 :: Integer
answer4_1 = foldl max 0 $
            filter (\xs -> reverse (show xs) == show xs)
                   [x * y | x <- reverse [100..999], y <- reverse [100..x]]

-- Problem 5: Smallest multiple
-- --
-- 2520 is the smallest number that can be divided by each of the numbers from
-- 1 to 10 without any remainder.
-- What is the smallest positive number that is evenly divisible by all of the
-- numbers from 1 to 20?
-- --
-- Answer: 232792560

-- answer5_1: O(?)
answer5_1 :: Integer
answer5_1 = product $
            map (\x -> last $ takeWhile (<= 20) $ map (x ^) [1..]) $
            takeWhile (<= 20) primes

-- Problem 6: Sum square difference
-- --
-- The sum of the squares of the first ten natural numbers is,
-- 1^2 + 2^2 + ... + 10^2 = 385
-- The square of the sum of the first ten natural numbers is,
-- (1 + 2 + ... + 10)^2 = 55^2 = 3025
-- Hence the difference between the sum of the squares of the first ten natural
-- numbers and the square of the sum is 3025 − 385 = 2640.
-- Find the difference between the sum of the squares of the first one hundred
-- natural numbers and the square of the sum.
-- --
-- Answer: 25164150

-- answer6_1: O(?)
answer6_1 :: Integer
answer6_1 = sqr (sum [1..100]) - sum [sqr x | x <- [1..100]]
  where sqr x = x * x

-- Problem 7: 10001st prime
-- --
-- By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see
-- that the 6th prime is 13.
-- What is the 10001st prime number?
-- --
-- Answer: 104743

-- answer7_1: O(?)
answer7_1 :: Integer
answer7_1 = primes !! 10000

-- Problem 8: Largest product in a series
-- --
-- The four adjacent digits in the 1000-digit number that have the greatest
-- product are 9 × 9 × 8 × 9 = 5832.
-- 73167176531330624919225119674426574742355349194934
-- 96983520312774506326239578318016984801869478851843
-- 85861560789112949495459501737958331952853208805511
-- 12540698747158523863050715693290963295227443043557
-- 66896648950445244523161731856403098711121722383113
-- 62229893423380308135336276614282806444486645238749
-- 30358907296290491560440772390713810515859307960866
-- 70172427121883998797908792274921901699720888093776
-- 65727333001053367881220235421809751254540594752243
-- 52584907711670556013604839586446706324415722155397
-- 53697817977846174064955149290862569321978468622482
-- 83972241375657056057490261407972968652414535100474
-- 82166370484403199890008895243450658541227588666881
-- 16427171479924442928230863465674813919123162824586
-- 17866458359124566529476545682848912883142607690042
-- 24219022671055626321111109370544217506941658960408
-- 07198403850962455444362981230987879927244284909188
-- 84580156166097919133875499200524063689912560717606
-- 05886116467109405077541002256983155200055935729725
-- 71636269561882670428252483600823257530420752963450
-- Find the thirteen adjacent digits in the 1000-digit number that have the
-- greatest product. What is the value of this product?
-- --
-- Answer: 23514624000

-- answer8_1: O(?)
answer8_1 :: Int
answer8_1 = foldl (\m -> max m . product . map digitToInt . take 13) 0 $
            takeWhile ((>= 13) . length) $ tails series
  where series = "73167176531330624919225119674426574742355349194934" ++
                 "96983520312774506326239578318016984801869478851843" ++
                 "85861560789112949495459501737958331952853208805511" ++
                 "12540698747158523863050715693290963295227443043557" ++
                 "66896648950445244523161731856403098711121722383113" ++
                 "62229893423380308135336276614282806444486645238749" ++
                 "30358907296290491560440772390713810515859307960866" ++
                 "70172427121883998797908792274921901699720888093776" ++
                 "65727333001053367881220235421809751254540594752243" ++
                 "52584907711670556013604839586446706324415722155397" ++
                 "53697817977846174064955149290862569321978468622482" ++
                 "83972241375657056057490261407972968652414535100474" ++
                 "82166370484403199890008895243450658541227588666881" ++
                 "16427171479924442928230863465674813919123162824586" ++
                 "17866458359124566529476545682848912883142607690042" ++
                 "24219022671055626321111109370544217506941658960408" ++
                 "07198403850962455444362981230987879927244284909188" ++
                 "84580156166097919133875499200524063689912560717606" ++
                 "05886116467109405077541002256983155200055935729725" ++
                 "71636269561882670428252483600823257530420752963450"

-- Problem 9: Special Pythagorean triplet
-- --
-- A Pythagorean triplet is a set of three natural numbers, a < b < c, for
-- which, a ^ 2 + b ^ 2 = c ^ 2
-- For example, 32 + 42 = 9 + 16 = 25 = 52.
-- There exists exactly one Pythagorean triplet for which a + b + c = 1000.
-- Find the product abc.
-- --
-- Answer: 31875000

-- answer9_1: O(?)
answer9_1 :: Integer
answer9_1 = let (a, b, c) = head $
                            filter (\(a, b, c) -> a * a + b * b == c * c)
                              [(a, b, 1000 - a - b) |
                                a <- [1..500], b <- [a..500]]
             in a * b * c

-- Problem 10: Summation of primes
-- --
-- The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
-- Find the sum of all the primes below two million.
-- --
-- Answer: 142913828922

-- answer10_1: O(?)
answer10_1 :: Integer
answer10_1 = sum $ primesBounded 2000000

-- Problem 11: Largest product in a grid
-- --
-- In the 20×20 grid below, four numbers along a diagonal line have been marked
-- in red.
-- 08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
-- 49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
-- 81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
-- 52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
-- 22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
-- 24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
-- 32 98 81 28 64 23 67 10<26>38 40 67 59 54 70 66 18 38 64 70
-- 67 26 20 68 02 62 12 20 95<63>94 39 63 08 40 91 66 49 94 21
-- 24 55 58 05 66 73 99 26 97 17<78>78 96 83 14 88 34 89 63 72
-- 21 36 23 09 75 00 76 44 20 45 35<14>00 61 33 97 34 31 33 95
-- 78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
-- 16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
-- 86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
-- 19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
-- 04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
-- 88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
-- 04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
-- 20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
-- 20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
-- 01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
-- The product of these numbers is 26 × 63 × 78 × 14 = 1788696.
-- What is the greatest product of four adjacent numbers in the same direction
-- (up, down, left, right, or diagonally) in the 20×20 grid?
-- --
-- Answer: 70600674

-- answer11_1: O(?)
answer11_1 :: Integer
answer11_1 = maximum [vmax, hmax, lsmax, rsmax]
  where vmax = rowsMaxProduct grid
        hmax = rowsMaxProduct $ transpose grid
        lsmax = rowsMaxProduct $ rotate grid
        rsmax = rowsMaxProduct $ rotate $ reverse grid
        rowsMaxProduct = maximum .
                         concatMap (
                           map (product . take 4) .
                           filter ((>= 4) . length) . tails)
        grid =
          [
            [8, 2, 22,97,38,15, 0,40, 0,75, 4, 5, 7,78,52,12,50,77,91, 8],
            [49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48, 4,56,62, 0],
            [81,49,31,73,55,79,14,29,93,71,40,67,53,88,30, 3,49,13,36,65],
            [52,70,95,23, 4,60,11,42,69,24,68,56, 1,32,56,71,37, 2,36,91],
            [22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80],
            [24,47,32,60,99, 3,45, 2,44,75,33,53,78,36,84,20,35,17,12,50],
            [32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70],
            [67,26,20,68, 2,62,12,20,95,63,94,39,63, 8,40,91,66,49,94,21],
            [24,55,58, 5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72],
            [21,36,23, 9,75, 0,76,44,20,45,35,14, 0,61,33,97,34,31,33,95],
            [78,17,53,28,22,75,31,67,15,94, 3,80, 4,62,16,14, 9,53,56,92],
            [16,39, 5,42,96,35,31,47,55,58,88,24, 0,17,54,24,36,29,85,57],
            [86,56, 0,48,35,71,89, 7, 5,44,44,37,44,60,21,58,51,54,17,58],
            [19,80,81,68, 5,94,47,69,28,73,92,13,86,52,17,77, 4,89,55,40],
            [4, 52, 8,83,97,35,99,16, 7,97,57,32,16,26,26,79,33,27,98,66],
            [88,36,68,87,57,62,20,72, 3,46,33,67,46,55,12,32,63,93,53,69],
            [4, 42,16,73,38,25,39,11,24,94,72,18, 8,46,29,32,40,62,76,36],
            [20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74, 4,36,16],
            [20,73,35,29,78,31,90, 1,74,31,49,71,48,86,81,16,23,57, 5,54],
            [1, 70,54,71,83,51,54,69,16,92,33,48,61,43,52, 1,89,19,67,48]
          ]

-- Problem 12: Highly divisible triangular number
-- --
-- The sequence of triangle numbers is generated by adding the natural numbers.
-- So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The
-- first ten terms would be:
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
-- Let us list the factors of the first seven triangle numbers:
--     1: 1
--     3: 1,3
--     6: 1,2,3,6
--    10: 1,2,5,10
--    15: 1,3,5,15
--    21: 1,3,7,21
--    28: 1,2,4,7,14,28
-- We can see that 28 is the first triangle number to have over five divisors.
-- What is the value of the first triangle number to have over five hundred
-- divisors?
-- --
-- Answer: 76576500

-- answer12_1: O(?)
answer12_1 :: Integer
answer12_1 = loop 1 2
  where loop r x
          | numOfFactors r > 500 = r
          | otherwise = loop (r + x) (x + 1)

-- Problem 13: Large sum
-- --
-- Work out the first ten digits of the sum of the following one-hundred 50-
-- digit numbers.
-- 37107287533902102798797998220837590246510135740250
-- 46376937677490009712648124896970078050417018260538
-- 74324986199524741059474233309513058123726617309629
-- 91942213363574161572522430563301811072406154908250
-- 23067588207539346171171980310421047513778063246676
-- 89261670696623633820136378418383684178734361726757
-- 28112879812849979408065481931592621691275889832738
-- 44274228917432520321923589422876796487670272189318
-- 47451445736001306439091167216856844588711603153276
-- 70386486105843025439939619828917593665686757934951
-- 62176457141856560629502157223196586755079324193331
-- 64906352462741904929101432445813822663347944758178
-- 92575867718337217661963751590579239728245598838407
-- 58203565325359399008402633568948830189458628227828
-- 80181199384826282014278194139940567587151170094390
-- 35398664372827112653829987240784473053190104293586
-- 86515506006295864861532075273371959191420517255829
-- 71693888707715466499115593487603532921714970056938
-- 54370070576826684624621495650076471787294438377604
-- 53282654108756828443191190634694037855217779295145
-- 36123272525000296071075082563815656710885258350721
-- 45876576172410976447339110607218265236877223636045
-- 17423706905851860660448207621209813287860733969412
-- 81142660418086830619328460811191061556940512689692
-- 51934325451728388641918047049293215058642563049483
-- 62467221648435076201727918039944693004732956340691
-- 15732444386908125794514089057706229429197107928209
-- 55037687525678773091862540744969844508330393682126
-- 18336384825330154686196124348767681297534375946515
-- 80386287592878490201521685554828717201219257766954
-- 78182833757993103614740356856449095527097864797581
-- 16726320100436897842553539920931837441497806860984
-- 48403098129077791799088218795327364475675590848030
-- 87086987551392711854517078544161852424320693150332
-- 59959406895756536782107074926966537676326235447210
-- 69793950679652694742597709739166693763042633987085
-- 41052684708299085211399427365734116182760315001271
-- 65378607361501080857009149939512557028198746004375
-- 35829035317434717326932123578154982629742552737307
-- 94953759765105305946966067683156574377167401875275
-- 88902802571733229619176668713819931811048770190271
-- 25267680276078003013678680992525463401061632866526
-- 36270218540497705585629946580636237993140746255962
-- 24074486908231174977792365466257246923322810917141
-- 91430288197103288597806669760892938638285025333403
-- 34413065578016127815921815005561868836468420090470
-- 23053081172816430487623791969842487255036638784583
-- 11487696932154902810424020138335124462181441773470
-- 63783299490636259666498587618221225225512486764533
-- 67720186971698544312419572409913959008952310058822
-- 95548255300263520781532296796249481641953868218774
-- 76085327132285723110424803456124867697064507995236
-- 37774242535411291684276865538926205024910326572967
-- 23701913275725675285653248258265463092207058596522
-- 29798860272258331913126375147341994889534765745501
-- 18495701454879288984856827726077713721403798879715
-- 38298203783031473527721580348144513491373226651381
-- 34829543829199918180278916522431027392251122869539
-- 40957953066405232632538044100059654939159879593635
-- 29746152185502371307642255121183693803580388584903
-- 41698116222072977186158236678424689157993532961922
-- 62467957194401269043877107275048102390895523597457
-- 23189706772547915061505504953922979530901129967519
-- 86188088225875314529584099251203829009407770775672
-- 11306739708304724483816533873502340845647058077308
-- 82959174767140363198008187129011875491310547126581
-- 97623331044818386269515456334926366572897563400500
-- 42846280183517070527831839425882145521227251250327
-- 55121603546981200581762165212827652751691296897789
-- 32238195734329339946437501907836945765883352399886
-- 75506164965184775180738168837861091527357929701337
-- 62177842752192623401942399639168044983993173312731
-- 32924185707147349566916674687634660915035914677504
-- 99518671430235219628894890102423325116913619626622
-- 73267460800591547471830798392868535206946944540724
-- 76841822524674417161514036427982273348055556214818
-- 97142617910342598647204516893989422179826088076852
-- 87783646182799346313767754307809363333018982642090
-- 10848802521674670883215120185883543223812876952786
-- 71329612474782464538636993009049310363619763878039
-- 62184073572399794223406235393808339651327408011116
-- 66627891981488087797941876876144230030984490851411
-- 60661826293682836764744779239180335110989069790714
-- 85786944089552990653640447425576083659976645795096
-- 66024396409905389607120198219976047599490197230297
-- 64913982680032973156037120041377903785566085089252
-- 16730939319872750275468906903707539413042652315011
-- 94809377245048795150954100921645863754710598436791
-- 78639167021187492431995700641917969777599028300699
-- 15368713711936614952811305876380278410754449733078
-- 40789923115535562561142322423255033685442488917353
-- 44889911501440648020369068063960672322193204149535
-- 41503128880339536053299340368006977710650566631954
-- 81234880673210146739058568557934581403627822703280
-- 82616570773948327592232845941706525094512325230608
-- 22918802058777319719839450180888072429661980811197
-- 77158542502016545090413245809786882778948721859617
-- 72107838435069186155435662884062257473692284509516
-- 20849603980134001723930671666823555245252804609722
-- 53503534226472524250874054075591789781264330331690
-- --
-- Answer: 5537376230

-- answer13_1: O(?)
answer13_1 :: IO String
answer13_1 = do
  str <- getContents
  let s = sum $ map read $ lines str :: Integer
  return $ take 10 $ show s

-- Problem 14: Longest Collatz sequence
-- --
-- The following iterative sequence is defined for the set of positive
-- integers:
-- n → n/2 (n is even)
-- n → 3n + 1 (n is odd)
-- Using the rule above and starting with 13, we generate the following
-- sequence:
-- 13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
-- It can be seen that this sequence (starting at 13 and finishing at 1)
-- contains 10 terms. Although it has not been proved yet (Collatz Problem), it
-- is thought that all starting numbers finish at 1.
-- Which starting number, under one million, produces the longest chain?
-- NOTE: Once the chain starts the terms are allowed to go above one million.
-- --
-- Answer: 837799

-- answer14_1: O(?)
answer14_1 :: Integer
answer14_1 = fst $ maximumBy (comparing snd) $ assocs collatzArr
  where collatzArr = listArray (1, lenBound) $ 0 : map collatzLen [2..lenBound]
        collatzLen x
          | y <= lenBound = 1 + collatzArr ! y
          | otherwise = 1 + collatzLen y
          where y | even x = x `div` 2
                  | otherwise = x * 3 + 1
        lenBound = 1000000

-- Problem 15: Lattice paths
-- --
-- Starting in the top left corner of a 2×2 grid, and only being able to move
-- to the right and down, there are exactly 6 routes to the bottom right
-- corner.
-- [https://projecteuler.net/project/images/p015.gif]
-- How many such routes are there through a 20×20 grid?
-- --
-- Answer: 137846528820

-- answer15_1: O(1)
answer15_1 :: Integer
answer15_1 = fact (20 * 2) `div` (fact 20 ^ 2)

-- answer15_2: O(?)
answer15_2 :: Integer
answer15_2 = cal 20 20
  where cal x y
          | x == 1 || y == 1 = toInteger $ x + y
          | x == y = 2 * mcal (x - 1) y
          | otherwise = mcal (x - 1) y + mcal x (y - 1)
        mcal x y
          | x < y = mcal y x
          | otherwise = mcall !! (x - 1) !! (y - 1)
        mcall = [[cal x y | y <- [1..x]] | x <- [1..20]]

-- answer15_3: O(?)
answer15_3 :: Integer
answer15_3 = pascalsTriangle !! 20 !! 20

-- Problem 55: Lychrel numbers
-- --
-- If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.
-- Not all numbers produce palindromes so quickly. For example,
-- 349 + 943 = 1292,
-- 1292 + 2921 = 4213
-- 4213 + 3124 = 7337
-- That is, 349 took three iterations to arrive at a palindrome.
-- Although no one has proved it yet, it is thought that some numbers, like
-- 196, never produce a palindrome. A number that never forms a palindrome
-- through the reverse and add process is called a Lychrel number. Due to the
-- theoretical nature of these numbers, and for the purpose of this problem, we
-- shall assume that a number is Lychrel until proven otherwise. In addition
-- you are given that for every number below ten-thousand, it will either (i)
-- become a palindrome in less than fifty iterations, or, (ii) no one, with all
-- the computing power that exists, has managed so far to map it to a
-- palindrome. In fact, 10677 is the first number to be shown to require over
-- fifty iterations before producing a palindrome: 4668731596684224866951378664
-- (53 iterations, 28-digits).
-- Surprisingly, there are palindromic numbers that are themselves Lychrel
-- numbers; the first example is 4994.
-- How many Lychrel numbers are there below ten-thousand?
-- NOTE: Wording was modified slightly on 24 April 2007 to emphasise the
-- theoretical nature of Lychrel numbers.
-- --
-- Answer: 249

-- answer55_1: O(?)
answer55_1 :: Int
answer55_1 = count isLychrel [1..10000]
  where isLychrel = loop 0
            where loop t x
                    | t == 0 = f
                    | t == 50 = True
                    | isPalindromic x  = False
                    | otherwise = f
                    where f = loop (t + 1) (x + read (reverse $ show x))
        isPalindromic n = let s = show n in s == reverse s

-- Problem 56: Powerful digit sum
-- --
-- A googol (10 ^ 100) is a massive number: one followed by one-hundred zeros;
-- 100 ^ 100 is almost unimaginably large: one followed by two-hundred zeros.
-- Despite their size, the sum of the digits in each number is only 1.
-- Considering natural numbers of the form, a ^ b, where a, b < 100, what is the
-- maximum digital sum?
-- --
-- Answer: 972

-- answer56_1: O(?)
answer56_1 :: Integer
answer56_1 = maximum [sum $ map (toInteger . digitToInt) $ show (a ^ b)
                     | a <- [1..99], b <- [1..99]]

-- Problem 60: Prime pair sets
-- --
-- The primes 3, 7, 109, and 673, are quite remarkable. By taking any two
-- primes and concatenating them in any order the result will always be prime.
-- For example, taking 7 and 109, both 7109 and 1097 are prime. The sum of
-- these four primes, 792, represents the lowest sum for a set of four primes
-- with this property.
-- Find the lowest sum for a set of five primes for which any two primes
-- concatenate to produce another prime.
-- --
-- Answer: ??

-- Problem 61: Cyclical figurate numbers
-- --
-- Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal numbers
-- are all figurate (polygonal) numbers and are generated by the following]
-- formulae:
-- Triangle   P_{3,n}=n(n+1)/2  1, 3, 6, 10, 15, ...
-- Square     P_{4,n}=n^2       1, 4, 9, 16, 25, ...
-- Pentagonal P_{5,n}=n(3n−1)/2 1, 5, 12, 22, 35, ...
-- Hexagonal  P_{6,n}=n(2n−1)   1, 6, 15, 28, 45, ...
-- Heptagonal P_{7,n}=n(5n−3)/2 1, 7, 18, 34, 55, ...
-- Octagonal  P_{8,n}=n(3n−2)   1, 8, 21, 40, 65, ...
-- The ordered set of three 4-digit numbers: 8128, 2882, 8281, has three
-- interesting properties.
--     The set is cyclic, in that the last two digits of each number is the
--     first two digits of the next number (including the last number with the
--     first).
--     Each polygonal type: triangle (P3,127=8128), square (P4,91=8281), and
--     pentagonal (P5,44=2882), is represented by a different number in the
--     set.
--     This is the only set of 4-digit numbers with this property.
-- Find the sum of the only ordered set of six cyclic 4-digit numbers for which
-- each polygonal type: triangle, square, pentagonal, hexagonal, heptagonal,
-- and octagonal, is represented by a different number in the set.
-- --
-- Answer: ??

-- Problem 62: Cubic permutations
-- --
-- The cube, 41063625 (345^3), can be permuted to produce two other cubes:
-- 56623104 (384^3) and 66430125 (405^3). In fact, 41063625 is the smallest
-- cube which has exactly three permutations of its digits which are also cube.
-- Find the smallest cube for which exactly five permutations of its digits are
-- cube.
-- --
-- Answer: 127035954683

-- andwer62_1: O(?)
answer62_1 :: String
answer62_1 = search 0 [] cubes
  where cubes = [(c, sort c) | x <- [1..], let c = show $ x * x * x]
        search x l cs @ ((n, c) : r)
          | length c > x = search (x + 1) [] cs
          | otherwise = let (nl, t, nr) = add c n l []
                         in if t == 5 then nr
                            else search x nl r
        add c n ((tu @ (c', n', t)) : r) res
          | c == c' = (r ++ (c', n', t + 1) : res, t + 1, n')
          | otherwise = add c n r (tu : res)
        add c n [] res = ((c, n, 1) : res, 1, "")

-- Problem 68: Magic 5-gon ring
-- --
-- Consider the following "magic" 3-gon ring, filled with the numbers 1 to 6,
-- and each line adding to nine.
-- [https://projecteuler.net/project/images/p068_1.gif]
-- Working clockwise, and starting from the group of three with the numerically
-- lowest external node (4,3,2 in this example), each solution can be described
-- uniquely. For example, the above solution can be described by the set:
-- 4,3,2; 6,2,1; 5,1,3.
-- It is possible to complete the ring with four different totals: 9, 10, 11,
-- and 12. There are eight solutions in total.
-- Total    Solution Set
--   9   4,2,3; 5,3,1; 6,1,2
--   9   4,3,2; 6,2,1; 5,1,3
--  10   2,3,5; 4,5,1; 6,1,3
--  10   2,5,3; 6,3,1; 4,1,5
--  11   1,4,6; 3,6,2; 5,2,4
--  11   1,6,4; 5,4,2; 3,2,6
--  12   1,5,6; 2,6,4; 3,4,5
--  12   1,6,5; 3,5,4; 2,4,6
-- By concatenating each group it is possible to form 9-digit strings; the
-- maximum string for a 3-gon ring is 432621513.
-- Using the numbers 1 to 10, and depending on arrangements, it is possible to
-- form 16- and 17-digit strings. What is the maximum 16-digit string for a
-- "magic" 5-gon ring?
-- [https://projecteuler.net/project/images/p068_2.gif]
-- --
-- Answer: 6531031914842725

-- answer68_1: O(?)
answer68_1 :: String
answer68_1 = concatMap (concatMap show . (\([o1, o2, o3, o4], [i1, i2, i3]) ->
               [6, 5, 3, o1, 3, i1, o2, i1, i2, o3, i2, i3, o4, i3, 5])) $
             filter (\([o1, o2, o3, o4], [i1, i2, i3]) ->
                      o1 + 3 + i1 == 14 && o2 + i1 + i2 == 14 &&
                      o3 + i2 + i3 == 14 && o4 + i3 + 5 == 14)
                    [(o, i) | o <- permutations [7, 8, 9, 10],
                              i <- permutations [1, 2, 4]]

-- Problem 76: Counting summations
-- --
-- It is possible to write five as a sum in exactly six different ways:
-- 4 + 1
-- 3 + 2
-- 3 + 1 + 1
-- 2 + 2 + 1
-- 2 + 1 + 1 + 1
-- 1 + 1 + 1 + 1 + 1
-- How many different ways can one hundred be written as a sum of at least two
-- positive integers?
-- --
-- Answer: ??

-- answer76_1: O(?)
answer76_1 :: Integer
answer76_1 = pack (n - 1) n
  where n = 100
        mem = listArray (1, n - 1)
              [listArray (1, n) [pack i v | v <- [1..n]]
              | i <- [1..(n - 1)]]
        pack i v
          | i == 1 || v == 1 = 1
          | i > v = mem ! v ! v
          | i == v = mem ! (i - 1) ! v + 1
          | otherwise = mem ! (i - 1) ! v + mem ! i ! (v - i)

-- Problem 79: Passcode derivation
-- --
-- A common security method used for online banking is to ask the user for
-- three random characters from a passcode. For example, if the passcode was
-- 531278, they may ask for the 2nd, 3rd, and 5th characters; the expected
-- reply would be: 317.
-- The text file, [https://projecteuler.net/project/resources/p079_keylog.txt],
-- contains fifty successful login attempts.
-- Given that the three characters are always asked for in order, analyse the
-- file so as to determine the shortest possible secret passcode of unknown
-- length.
-- --
-- Answer: 73162890

-- answer79_1: O(?)
answer79_1 :: IO String
answer79_1 = do
  kl <- forM [1..50] (const getLine)
  return $ sortBy (\c1 c2 ->
    foldl (\o [a, b, c] ->
            if c2 == a && (c1 == b || c1 == c) || c2 == b && c1 == c
            then GT else o)
          LT kl) $ nub $ concat kl

-- Problem 97: Large non-Mersenne prime
-- --
-- The first known prime found to exceed one million digits was discovered in
-- 1999, and is a Mersenne prime of the form 2 ^ 6972593 − 1; it contains
-- exactly 2,098,960 digits. Subsequently other Mersenne primes, of the form
-- 2 ^ p − 1, have been found which contain more digits.
-- However, in 2004 there was found a massive non-Mersenne prime which contains
-- 2,357,207 digits: 28433 × 2 ^ 7830457 + 1.
-- Find the last ten digits of this prime number.
-- --
-- Answer: 8739992577

-- answer97_1: O(1)
answer97_1 :: Integer
answer97_1 = (28433 * 2 ^ 7830457 + 1) `mod` 10000000000
